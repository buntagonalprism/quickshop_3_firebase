rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  	function getList(listId) {
    	return get(/databases/$(database)/documents/lists/$(listId)).data
    }

    // Users can create and read their own user document
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  
    // Lists can be created by anyone logged in, updated by editors, and deleted by owners
    match /lists/{listId} {
      allow create: if request.auth.uid != null;
      allow read, update: if request.auth.uid in resource.data.editorIds;
      allow delete: if request.auth.uid == resource.data.ownerId;
    }

    // Items can be managed by list editors
    match /lists/{listId}/items/{itemId} {
      allow read, write: if request.auth.uid in getList(listId).editorIds;
    }
    
    // Records of item deletes can be managed by list editors
    match /lists/{listId}/_itemDeletes/{deleteId} {
      allow create: if request.auth.uid in getList(listId).editorIds;
    }

    // Invites can be created by list editors, and queried by the inviter. Anyone logged in
    // can read a singular invite, but they must know the inviteId.
    // https://firebase.google.com/docs/firestore/security/rules-structure#granular_operations
    match /invites/{inviteId} {
      allow create: if request.auth.uid in getList(request.resource.data.listId).editorIds;
      allow list, delete: if request.auth.uid == resource.data.inviterId;
      allow get: if request.auth.uid != null;
    }
  
  	// Otherwise disallow all access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}